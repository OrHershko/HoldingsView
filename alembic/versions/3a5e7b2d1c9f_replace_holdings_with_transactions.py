"""Replace holdings with transactions

Revision ID: 3a5e7b2d1c9f
Revises: 2c5f87b8979e
Create Date: 2025-06-15 10:00:00.123456

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3a5e7b2d1c9f'
down_revision: Union[str, None] = '2c5f87b8979e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Use the more robust `create_type=False` for the Enum object,
    # and then manually create it with `checkfirst=True`.
    transaction_type_enum = postgresql.ENUM('BUY', 'SELL', name='transaction_type', create_type=False)
    transaction_type_enum.create(op.get_bind(), checkfirst=True)

    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=10), nullable=False),
    sa.Column('transaction_type', transaction_type_enum, nullable=False), # Use the Enum object here
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('portfolio_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolio.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_id'), 'transaction', ['id'], unique=False)
    op.create_index(op.f('ix_transaction_symbol'), 'transaction', ['symbol'], unique=False)
    
    # Drop the old 'holding' table
    op.drop_table('holding', if_exists=True)
    op.drop_index(op.f('ix_holding_symbol'), table_name='holding', if_exists=True)
    op.drop_index(op.f('ix_holding_id'), table_name='holding', if_exists=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Re-create the 'holding' table
    op.create_table('holding',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('purchase_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('purchase_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('portfolio_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolio.id'], name='holding_portfolio_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='holding_pkey')
    )
    op.create_index(op.f('ix_holding_symbol'), 'holding', ['symbol'], unique=False, if_not_exists=True)
    op.create_index(op.f('ix_holding_id'), 'holding', ['id'], unique=False, if_not_exists=True)

    # Drop the 'transaction' table
    op.drop_table('transaction', if_exists=True)
    op.drop_index(op.f('ix_transaction_symbol'), table_name='transaction', if_exists=True)
    op.drop_index(op.f('ix_transaction_id'), table_name='transaction', if_exists=True)

    # Drop the ENUM type
    transaction_type_enum = postgresql.ENUM('BUY', 'SELL', name='transaction_type')
    transaction_type_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###